apiVersion: v1
kind: Namespace
metadata:
  name: claude-chat
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: claude-web-sa
  namespace: claude-chat
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/claude-web-bedrock-role
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-config
  namespace: claude-chat
data:
  AWS_REGION: "us-east-1"
  CLAUDE_CODE_USE_BEDROCK: "true"
  ANTHROPIC_MODEL: "claude-3-5-sonnet-20241022"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-web
  namespace: claude-chat
spec:
  replicas: 2
  selector:
    matchLabels:
      app: claude-web
  template:
    metadata:
      labels:
        app: claude-web
    spec:
      serviceAccountName: claude-web-sa
      containers:
      - name: claude-web
        image: claude-web-go:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: claude-config
              key: AWS_REGION
        - name: ANTHROPIC_API_KEY
          valueFrom:
            configMapKeyRef:
              name: claude-config
              key: ANTHROPIC_API_KEY
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: claude-web-service
  namespace: claude-chat
spec:
  selector:
    app: claude-web
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-web-ingress
  namespace: claude-chat
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - claude-chat.example.com
    secretName: claude-chat-tls
  rules:
  - host: claude-chat.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-web-service
            port:
              number: 80